import bisect
class Solution:
    def findSwapValues(self, a, n, b, m):
        s1 = sum(a)
        s2 = sum(b)
        
        # if sum is odd, not possible
        if abs(s2 - s1) % 2:
            return -1
        
        sum_diff = (s2 - s1) // 2
        b.sort()
        
        for val in a:
            target = sum_diff + val
            if self.binary_search(b, target):
                return 1
        
        return -1
    
    def binary_search(self, arr, target):
        index = bisect.bisect_left(arr, target)
        return index < len(arr) and arr[index] == target
